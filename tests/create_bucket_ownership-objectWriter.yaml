CreateBucketDefault:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 404
      Error.Code: 'OwnershipControlsNotFoundError'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter-Private:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      ACL: 'private'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter-PublicRead:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      ACL: 'public-read'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
        - Grantee:
            Type: 'Group'
            URI: '${group_all_users_url}'
          Permission: 'READ'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter-PublicReadWrite:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      ACL: 'public-read-write'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
        - Grantee:
            Type: 'Group'
            URI: '${group_all_users_url}'
          Permission: 'READ'
        - Grantee:
            Type: 'Group'
            URI: '${group_all_users_url}'
          Permission: 'WRITE'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter-AuthenticatedRead:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      ACL: 'authenticated-read'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
        - Grantee:
            Type: 'Group'
            URI: '${group_authenticated_users_url}'
          Permission: READ
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
CreateBucket-ObjectWriter-Canned-CustomACL-NotAllowed:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      ACL: 'authenticated-read'
      GrantRead: 'uri="${group_all_users_url}", id="anonymous_account_id"'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: InvalidRequest
CreateBucket-ObjectWriter-CustomACL:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'ObjectWriter'
      GrantRead: 'uri="${group_all_users_url}", id="${anonymous_account_id}"'
      GrantReadACP: 'uri="${group_all_users_url}", id="${anonymous_account_id}"'
      GrantWrite: 'id="${anonymous_account_id}"'
      GrantWriteACP: 'id="${anonymous_account_id}"'
      GrantFullControl: 'uri="${group_authenticated_users_url}", id="${admin_account_id}"'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'ObjectWriter'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${admin_account_id}'
      Grants:
        - Grantee:
            Type: 'Group'
            URI: '${group_all_users_url}'
          Permission: 'READ'
        - Grantee:
            ID: '${anonymous_account_id}'
            Type: 'CanonicalUser'
          Permission: 'READ'
        - Grantee:
            ID: '${anonymous_account_id}'
            Type: 'CanonicalUser'
          Permission: 'WRITE'
        - Grantee:
            Type: 'Group'
            URI: '${group_authenticated_users_url}'
          Permission: 'FULL_CONTROL'
        - Grantee:
            ID: '${admin_account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
        - Grantee:
            Type: 'Group'
            URI: '${group_all_users_url}'
          Permission: 'READ_ACP'
        - Grantee:
            ID: '${anonymous_account_id}'
            Type: 'CanonicalUser'
          Permission: 'READ_ACP'
        - Grantee:
            ID: '${anonymous_account_id}'
            Type: 'CanonicalUser'
          Permission: 'WRITE_ACP'
  - operation: GetBucketOwnershipControls
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 403
      Error.Code: 'AccessDenied' # 'Message': 'Access Denied'
  - operation: GetBucketAcl
    clientName: 'anonymous'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200