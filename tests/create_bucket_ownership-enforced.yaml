CreateBucketDefault:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 404
      Error.Code: 'OwnershipControlsNotFoundError'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
CreateBucket-BucketOwnerEnforced:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'BucketOwnerEnforced'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
CreateBucket-BucketOwnerEnforced-Private:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      ACL: 'private'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
  - operation: GetBucketOwnershipControls
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      OwnershipControls:
        Rules:
          - ObjectOwnership: 'BucketOwnerEnforced'
  - operation: GetBucketAcl
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
    assertion:
      ResponseMetadata.HTTPStatusCode: 200
      Owner.ID: '${account_id}'
      Grants:
        - Grantee:
            ID: '${account_id}'
            Type: 'CanonicalUser'
          Permission: 'FULL_CONTROL'
CreateBucket-BucketOwnerEnforced-PublicRead:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      ACL: 'public-read'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: 'InvalidBucketAclWithObjectOwnership' # Message: Bucket cannot have ACLs set with ObjectOwnership's BucketOwnerEnforced setting
CreateBucket-BucketOwnerEnforced-PublicReadWrite:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      ACL: 'public-read-write'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: 'InvalidBucketAclWithObjectOwnership'
CreateBucket-BucketOwnerEnforced-AuthenticatedRead:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      ACL: 'authenticated-read'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: 'InvalidBucketAclWithObjectOwnership'
CreateBucket-BucketOwnerEnforced-Canned-CustomACL-NotAllowed:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      ACL: 'authenticated-read'
      GrantRead: 'uri="${group_all_users_url}", id="anonymous_account_id"'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: 'InvalidRequest' # 'Message': 'Specifying both Canned ACLs and Header Grants is not allowed'
CreateBucket-BucketOwnerEnforced-CustomACL:
  - operation: GenerateBucketName
  - operation: DeleteBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
  - operation: CreateBucket
    clientName: 'admin'
    parameters:
      Bucket: '${Bucket}'
      CreateBucketConfiguration:
        LocationConstraint: '${region_name}'
      ObjectOwnership: 'BucketOwnerEnforced'
      GrantRead: 'uri="${group_all_users_url}", id="${anonymous_account_id}"'
      GrantReadACP: 'uri="${group_all_users_url}", id="${anonymous_account_id}"'
      GrantWrite: 'id="${anonymous_account_id}"'
      GrantWriteACP: 'id="${anonymous_account_id}"'
      GrantFullControl: 'uri="${group_authenticated_users_url}", id="${admin_account_id}"'
    assertion:
      ResponseMetadata.HTTPStatusCode: 400
      Error.Code: 'InvalidBucketAclWithObjectOwnership'